import React, { useState } from 'react';
import './Style.css';

const Approval_Page = () => {
    const initialPayrollData = [
        // ... your initial payroll data
    ];

    const [payrollData, setPayrollData] = useState(initialPayrollData);
    const [processingIndexes, setProcessingIndexes] = useState([]); // Track processing state for each row

    const handleApprove = (index) => {
        setProcessingIndexes(prevIndexes => [...prevIndexes, index]); // Start processing for the specific index

        // Simulate payment processing
        setTimeout(() => {
            setProcessingIndexes(prevIndexes => prevIndexes.filter(i => i !== index)); // Finish processing for the index
            const updatedData = [...payrollData];
            updatedData[index].status = 'Approved';
            setPayrollData(updatedData);
        }, 3000); // Change the delay to your desired processing time in milliseconds
    };

    return (
        <div>
            {/* ... header and table content ... */}
            {payrollData.map((row, index) => (
                <tr key={index}>
                    {/* ... other table cells ... */}
                    <td>
                        {row.status === 'Approved' ? (
                            <p className="success-message">Successfully Approved</p>
                        ) : (
                            <>
                                <button
                                    className="approve-btn"
                                    onClick={() => handleApprove(index)}
                                    disabled={processingIndexes.includes(index)}
                                >
                                    Approve
                                </button>
                                <button className="reject-btn ms-3" onClick={() => handleReject(index)}>
                                    {row.status === 'Approved' ? 'Delete' : 'Reject'}
                                </button>
                                <button className="hold-btn ms-3" onClick={() => handlehold(index)}>
                                    {row.status === 'On Hold' ? 'Unhold' : 'Hold'}
                                </button>
                            </>
                        )}
                    </td>
                </tr>
            ))}
            {/* ... overlay and processing container ... */}
        </div>
    );
};

export default Approval_Page;
